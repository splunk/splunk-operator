---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: splunkaiassistants.enterprise.splunk.com
spec:
  group: enterprise.splunk.com
  names:
    kind: SplunkAIAssistant
    listKind: SplunkAIAssistantList
    plural: splunkaiassistants
    shortNames:
    - saia
    singular: splunkaiassistant
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v4
    schema:
      openAPIV3Schema:
        description: SplunkAIAssistant is the Schema for the splunkaiassistants API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SplunkAIAssistantSpec defines the desired state of SplunkAIAssistant
            properties:
              affinity:
                description: node affinity configuraiton
                properties:
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      pod.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          The scheduler will prefer to schedule pods to nodes that satisfy
                          the affinity expressions specified by this field, but it may choose
                          a node that violates one or more of the expressions. The node that is
                          most preferred is the one with the greatest sum of weights, i.e.
                          for each node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions, etc.),
                          compute a sum by iterating through the elements of this field and adding
                          "weight" to the sum if the node matches the corresponding matchExpressions; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: |-
                            An empty preferred scheduling term matches all objects with implicit weight 0
                            (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          If the affinity requirements specified by this field are not met at
                          scheduling time, the pod will not be scheduled onto the node.
                          If the affinity requirements specified by this field cease to be met
                          at some point during pod execution (e.g. due to an update), the system
                          may or may not try to eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: |-
                                A null or empty node selector term matches no objects. The requirements of
                                them are ANDed.
                                The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  podAffinity:
                    description: Describes pod affinity scheduling rules (e.g. co-locate
                      this pod in the same node, zone, etc. as some other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          The scheduler will prefer to schedule pods to nodes that satisfy
                          the affinity expressions specified by this field, but it may choose
                          a node that violates one or more of the expressions. The node that is
                          most preferred is the one with the greatest sum of weights, i.e.
                          for each node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions, etc.),
                          compute a sum by iterating through the elements of this field and adding
                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaceSelector:
                                  description: |-
                                    A label query over the set of namespaces that the term applies to.
                                    The term is applied to the union of the namespaces selected by this field
                                    and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list means "this pod's namespace".
                                    An empty selector ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: |-
                                    namespaces specifies a static list of namespace names that the term applies to.
                                    The term is applied to the union of the namespaces listed in this field
                                    and the ones selected by namespaceSelector.
                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                    Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: |-
                                weight associated with matching the corresponding podAffinityTerm,
                                in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          If the affinity requirements specified by this field are not met at
                          scheduling time, the pod will not be scheduled onto the node.
                          If the affinity requirements specified by this field cease to be met
                          at some point during pod execution (e.g. due to a pod label update), the
                          system may or may not try to eventually evict the pod from its node.
                          When there are multiple elements, the lists of nodes corresponding to each
                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                        items:
                          description: |-
                            Defines a set of pods (namely those matching the labelSelector
                            relative to the given namespace(s)) that this pod should be
                            co-located (affinity) or not co-located (anti-affinity) with,
                            where co-located is defined as running on a node whose value of
                            the label with key <topologyKey> matches that of any node on which
                            a pod of the set of pods is running
                          properties:
                            labelSelector:
                              description: A label query over a set of resources,
                                in this case pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaceSelector:
                              description: |-
                                A label query over the set of namespaces that the term applies to.
                                The term is applied to the union of the namespaces selected by this field
                                and the ones listed in the namespaces field.
                                null selector and null or empty namespaces list means "this pod's namespace".
                                An empty selector ({}) matches all namespaces.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: |-
                                namespaces specifies a static list of namespace names that the term applies to.
                                The term is applied to the union of the namespaces listed in this field
                                and the ones selected by namespaceSelector.
                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: |-
                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                whose value of the label with key topologyKey matches that of any node on which any of the
                                selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                  podAntiAffinity:
                    description: Describes pod anti-affinity scheduling rules (e.g.
                      avoid putting this pod in the same node, zone, etc. as some
                      other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          The scheduler will prefer to schedule pods to nodes that satisfy
                          the anti-affinity expressions specified by this field, but it may choose
                          a node that violates one or more of the expressions. The node that is
                          most preferred is the one with the greatest sum of weights, i.e.
                          for each node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling anti-affinity expressions, etc.),
                          compute a sum by iterating through the elements of this field and adding
                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaceSelector:
                                  description: |-
                                    A label query over the set of namespaces that the term applies to.
                                    The term is applied to the union of the namespaces selected by this field
                                    and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list means "this pod's namespace".
                                    An empty selector ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: |-
                                    namespaces specifies a static list of namespace names that the term applies to.
                                    The term is applied to the union of the namespaces listed in this field
                                    and the ones selected by namespaceSelector.
                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                    Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: |-
                                weight associated with matching the corresponding podAffinityTerm,
                                in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          If the anti-affinity requirements specified by this field are not met at
                          scheduling time, the pod will not be scheduled onto the node.
                          If the anti-affinity requirements specified by this field cease to be met
                          at some point during pod execution (e.g. due to a pod label update), the
                          system may or may not try to eventually evict the pod from its node.
                          When there are multiple elements, the lists of nodes corresponding to each
                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                        items:
                          description: |-
                            Defines a set of pods (namely those matching the labelSelector
                            relative to the given namespace(s)) that this pod should be
                            co-located (affinity) or not co-located (anti-affinity) with,
                            where co-located is defined as running on a node whose value of
                            the label with key <topologyKey> matches that of any node on which
                            a pod of the set of pods is running
                          properties:
                            labelSelector:
                              description: A label query over a set of resources,
                                in this case pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaceSelector:
                              description: |-
                                A label query over the set of namespaces that the term applies to.
                                The term is applied to the union of the namespaces selected by this field
                                and the ones listed in the namespaces field.
                                null selector and null or empty namespaces list means "this pod's namespace".
                                An empty selector ({}) matches all namespaces.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: |-
                                namespaces specifies a static list of namespace names that the term applies to.
                                The term is applied to the union of the namespaces listed in this field
                                and the ones selected by namespaceSelector.
                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: |-
                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                whose value of the label with key topologyKey matches that of any node on which any of the
                                selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                type: object
              env:
                additionalProperties:
                  type: string
                type: object
              metrics:
                description: metrics configuration
                properties:
                  enabled:
                    description: Enable scraping of SAIA metrics
                    type: boolean
                  path:
                    description: Path under /metrics, default "/metrics"
                    type: string
                  port:
                    description: Port name or number, default "metrics"
                    format: int32
                    type: integer
                type: object
              mtls:
                description: mtls configuration
                properties:
                  dnsNames:
                    items:
                      type: string
                    type: array
                  enabled:
                    description: Enable or disable mTLS on the SAIA service
                    type: boolean
                  issuerRef:
                    description: If Enabled, how to request the cert
                    properties:
                      group:
                        description: Group of the resource being referred to.
                        type: string
                      kind:
                        description: Kind of the resource being referred to.
                        type: string
                      name:
                        description: Name of the resource being referred to.
                        type: string
                    required:
                    - name
                    type: object
                  secretName:
                    type: string
                  termination:
                    description: |-
                      Let users declare “I don’t want operator-managed TLS” even if Enabled=true,
                      e.g. they’re on Istio and will terminate externally.
                    type: string
                type: object
              port:
                description: Port specifies the default port for the service
                format: int32
                type: integer
              replicas:
                format: int32
                type: integer
              resources:
                description: resources k8s resources cpu, memory
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              serviceAccountName:
                type: string
              serviceTemplate:
                description: ServiceTemplate is a template used to create Kubernetes
                  services
                properties:
                  apiVersion:
                    description: |-
                      APIVersion defines the versioned schema of this representation of an object.
                      Servers should convert recognized schemas to the latest internal value, and
                      may reject unrecognized values.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                    type: string
                  kind:
                    description: |-
                      Kind is a string value representing the REST resource this object represents.
                      Servers may infer this from the endpoint the client submits requests to.
                      Cannot be updated.
                      In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  metadata:
                    description: |-
                      Standard object's metadata.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                    type: object
                  spec:
                    description: |-
                      Spec defines the behavior of a service.
                      https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
                    properties:
                      allocateLoadBalancerNodePorts:
                        description: |-
                          allocateLoadBalancerNodePorts defines if NodePorts will be automatically
                          allocated for services with type LoadBalancer.  Default is "true". It
                          may be set to "false" if the cluster load-balancer does not rely on
                          NodePorts.  If the caller requests specific NodePorts (by specifying a
                          value), those requests will be respected, regardless of this field.
                          This field may only be set for services with type LoadBalancer and will
                          be cleared if the type is changed to any other type.
                        type: boolean
                      clusterIP:
                        description: |-
                          clusterIP is the IP address of the service and is usually assigned
                          randomly. If an address is specified manually, is in-range (as per
                          system configuration), and is not in use, it will be allocated to the
                          service; otherwise creation of the service will fail. This field may not
                          be changed through updates unless the type field is also being changed
                          to ExternalName (which requires this field to be blank) or the type
                          field is being changed from ExternalName (in which case this field may
                          optionally be specified, as describe above).  Valid values are "None",
                          empty string (""), or a valid IP address. Setting this to "None" makes a
                          "headless service" (no virtual IP), which is useful when direct endpoint
                          connections are preferred and proxying is not required.  Only applies to
                          types ClusterIP, NodePort, and LoadBalancer. If this field is specified
                          when creating a Service of type ExternalName, creation will fail. This
                          field will be wiped when updating a Service to type ExternalName.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                        type: string
                      clusterIPs:
                        description: |-
                          ClusterIPs is a list of IP addresses assigned to this service, and are
                          usually assigned randomly.  If an address is specified manually, is
                          in-range (as per system configuration), and is not in use, it will be
                          allocated to the service; otherwise creation of the service will fail.
                          This field may not be changed through updates unless the type field is
                          also being changed to ExternalName (which requires this field to be
                          empty) or the type field is being changed from ExternalName (in which
                          case this field may optionally be specified, as describe above).  Valid
                          values are "None", empty string (""), or a valid IP address.  Setting
                          this to "None" makes a "headless service" (no virtual IP), which is
                          useful when direct endpoint connections are preferred and proxying is
                          not required.  Only applies to types ClusterIP, NodePort, and
                          LoadBalancer. If this field is specified when creating a Service of type
                          ExternalName, creation will fail. This field will be wiped when updating
                          a Service to type ExternalName.  If this field is not specified, it will
                          be initialized from the clusterIP field.  If this field is specified,
                          clients must ensure that clusterIPs[0] and clusterIP have the same
                          value.

                          This field may hold a maximum of two entries (dual-stack IPs, in either order).
                          These IPs must correspond to the values of the ipFamilies field. Both
                          clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      externalIPs:
                        description: |-
                          externalIPs is a list of IP addresses for which nodes in the cluster
                          will also accept traffic for this service.  These IPs are not managed by
                          Kubernetes.  The user is responsible for ensuring that traffic arrives
                          at a node with this IP.  A common example is external load-balancers
                          that are not part of the Kubernetes system.
                        items:
                          type: string
                        type: array
                      externalName:
                        description: |-
                          externalName is the external reference that discovery mechanisms will
                          return as an alias for this service (e.g. a DNS CNAME record). No
                          proxying will be involved.  Must be a lowercase RFC-1123 hostname
                          (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
                        type: string
                      externalTrafficPolicy:
                        description: |-
                          externalTrafficPolicy describes how nodes distribute service traffic they
                          receive on one of the Service's "externally-facing" addresses (NodePorts,
                          ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
                          the service in a way that assumes that external load balancers will take care
                          of balancing the service traffic between nodes, and so each node will deliver
                          traffic only to the node-local endpoints of the service, without masquerading
                          the client source IP. (Traffic mistakenly sent to a node with no endpoints will
                          be dropped.) The default value, "Cluster", uses the standard behavior of
                          routing to all endpoints evenly (possibly modified by topology and other
                          features). Note that traffic sent to an External IP or LoadBalancer IP from
                          within the cluster will always get "Cluster" semantics, but clients sending to
                          a NodePort from within the cluster may need to take traffic policy into account
                          when picking a node.
                        type: string
                      healthCheckNodePort:
                        description: |-
                          healthCheckNodePort specifies the healthcheck nodePort for the service.
                          This only applies when type is set to LoadBalancer and
                          externalTrafficPolicy is set to Local. If a value is specified, is
                          in-range, and is not in use, it will be used.  If not specified, a value
                          will be automatically allocated.  External systems (e.g. load-balancers)
                          can use this port to determine if a given node holds endpoints for this
                          service or not.  If this field is specified when creating a Service
                          which does not need it, creation will fail. This field will be wiped
                          when updating a Service to no longer need it (e.g. changing type).
                          This field cannot be updated once set.
                        format: int32
                        type: integer
                      internalTrafficPolicy:
                        description: |-
                          InternalTrafficPolicy describes how nodes distribute service traffic they
                          receive on the ClusterIP. If set to "Local", the proxy will assume that pods
                          only want to talk to endpoints of the service on the same node as the pod,
                          dropping the traffic if there are no local endpoints. The default value,
                          "Cluster", uses the standard behavior of routing to all endpoints evenly
                          (possibly modified by topology and other features).
                        type: string
                      ipFamilies:
                        description: |-
                          IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
                          service. This field is usually assigned automatically based on cluster
                          configuration and the ipFamilyPolicy field. If this field is specified
                          manually, the requested family is available in the cluster,
                          and ipFamilyPolicy allows it, it will be used; otherwise creation of
                          the service will fail. This field is conditionally mutable: it allows
                          for adding or removing a secondary IP family, but it does not allow
                          changing the primary IP family of the Service. Valid values are "IPv4"
                          and "IPv6".  This field only applies to Services of types ClusterIP,
                          NodePort, and LoadBalancer, and does apply to "headless" services.
                          This field will be wiped when updating a Service to type ExternalName.

                          This field may hold a maximum of two entries (dual-stack families, in
                          either order).  These families must correspond to the values of the
                          clusterIPs field, if specified. Both clusterIPs and ipFamilies are
                          governed by the ipFamilyPolicy field.
                        items:
                          description: |-
                            IPFamily represents the IP Family (IPv4 or IPv6). This type is used
                            to express the family of an IP expressed by a type (e.g. service.spec.ipFamilies).
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      ipFamilyPolicy:
                        description: |-
                          IPFamilyPolicy represents the dual-stack-ness requested or required by
                          this Service. If there is no value provided, then this field will be set
                          to SingleStack. Services can be "SingleStack" (a single IP family),
                          "PreferDualStack" (two IP families on dual-stack configured clusters or
                          a single IP family on single-stack clusters), or "RequireDualStack"
                          (two IP families on dual-stack configured clusters, otherwise fail). The
                          ipFamilies and clusterIPs fields depend on the value of this field. This
                          field will be wiped when updating a service to type ExternalName.
                        type: string
                      loadBalancerClass:
                        description: |-
                          loadBalancerClass is the class of the load balancer implementation this Service belongs to.
                          If specified, the value of this field must be a label-style identifier, with an optional prefix,
                          e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
                          This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
                          balancer implementation is used, today this is typically done through the cloud provider integration,
                          but should apply for any default implementation. If set, it is assumed that a load balancer
                          implementation is watching for Services with a matching class. Any default load balancer
                          implementation (e.g. cloud providers) should ignore Services that set this field.
                          This field can only be set when creating or updating a Service to type 'LoadBalancer'.
                          Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
                        type: string
                      loadBalancerIP:
                        description: |-
                          Only applies to Service Type: LoadBalancer.
                          This feature depends on whether the underlying cloud-provider supports specifying
                          the loadBalancerIP when a load balancer is created.
                          This field will be ignored if the cloud-provider does not support the feature.
                          Deprecated: This field was under-specified and its meaning varies across implementations,
                          and it cannot support dual-stack.
                          As of Kubernetes v1.24, users are encouraged to use implementation-specific annotations when available.
                          This field may be removed in a future API version.
                        type: string
                      loadBalancerSourceRanges:
                        description: |-
                          If specified and supported by the platform, this will restrict traffic through the cloud-provider
                          load-balancer will be restricted to the specified client IPs. This field will be ignored if the
                          cloud-provider does not support the feature."
                          More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
                        items:
                          type: string
                        type: array
                      ports:
                        description: |-
                          The list of ports that are exposed by this service.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                        items:
                          description: ServicePort contains information on service's
                            port.
                          properties:
                            appProtocol:
                              description: |-
                                The application protocol for this port.
                                This field follows standard Kubernetes label syntax.
                                Un-prefixed names are reserved for IANA standard service names (as per
                                RFC-6335 and https://www.iana.org/assignments/service-names).
                                Non-standard protocols should use prefixed names such as
                                mycompany.com/my-custom-protocol.
                              type: string
                            name:
                              description: |-
                                The name of this port within the service. This must be a DNS_LABEL.
                                All ports within a ServiceSpec must have unique names. When considering
                                the endpoints for a Service, this must match the 'name' field in the
                                EndpointPort.
                                Optional if only one ServicePort is defined on this service.
                              type: string
                            nodePort:
                              description: |-
                                The port on each node on which this service is exposed when type is
                                NodePort or LoadBalancer.  Usually assigned by the system. If a value is
                                specified, in-range, and not in use it will be used, otherwise the
                                operation will fail.  If not specified, a port will be allocated if this
                                Service requires one.  If this field is specified when creating a
                                Service which does not need it, creation will fail. This field will be
                                wiped when updating a Service to no longer need it (e.g. changing type
                                from NodePort to ClusterIP).
                                More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                              format: int32
                              type: integer
                            port:
                              description: The port that will be exposed by this service.
                              format: int32
                              type: integer
                            protocol:
                              default: TCP
                              description: |-
                                The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
                                Default is TCP.
                              type: string
                            targetPort:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Number or name of the port to access on the pods targeted by the service.
                                Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                If this is a string, it will be looked up as a named port in the
                                target Pod's container ports. If this is not specified, the value
                                of the 'port' field is used (an identity map).
                                This field is ignored for services with clusterIP=None, and should be
                                omitted or set equal to the 'port' field.
                                More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - port
                        - protocol
                        x-kubernetes-list-type: map
                      publishNotReadyAddresses:
                        description: |-
                          publishNotReadyAddresses indicates that any agent which deals with endpoints for this
                          Service should disregard any indications of ready/not-ready.
                          The primary use case for setting this field is for a StatefulSet's Headless Service to
                          propagate SRV DNS records for its Pods for the purpose of peer discovery.
                          The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
                          Services interpret this to mean that all endpoints are considered "ready" even if the
                          Pods themselves are not. Agents which consume only Kubernetes generated endpoints
                          through the Endpoints or EndpointSlice resources can safely assume this behavior.
                        type: boolean
                      selector:
                        additionalProperties:
                          type: string
                        description: |-
                          Route service traffic to pods with label keys and values matching this
                          selector. If empty or not present, the service is assumed to have an
                          external process managing its endpoints, which Kubernetes will not
                          modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
                          Ignored if type is ExternalName.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/
                        type: object
                        x-kubernetes-map-type: atomic
                      sessionAffinity:
                        description: |-
                          Supports "ClientIP" and "None". Used to maintain session affinity.
                          Enable client IP based session affinity.
                          Must be ClientIP or None.
                          Defaults to None.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                        type: string
                      sessionAffinityConfig:
                        description: sessionAffinityConfig contains the configurations
                          of session affinity.
                        properties:
                          clientIP:
                            description: clientIP contains the configurations of Client
                              IP based session affinity.
                            properties:
                              timeoutSeconds:
                                description: |-
                                  timeoutSeconds specifies the seconds of ClientIP type session sticky time.
                                  The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
                                  Default value is 10800(for 3 hours).
                                format: int32
                                type: integer
                            type: object
                        type: object
                      type:
                        description: |-
                          type determines how the Service is exposed. Defaults to ClusterIP. Valid
                          options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
                          "ClusterIP" allocates a cluster-internal IP address for load-balancing
                          to endpoints. Endpoints are determined by the selector or if that is not
                          specified, by manual construction of an Endpoints object or
                          EndpointSlice objects. If clusterIP is "None", no virtual IP is
                          allocated and the endpoints are published as a set of endpoints rather
                          than a virtual IP.
                          "NodePort" builds on ClusterIP and allocates a port on every node which
                          routes to the same endpoints as the clusterIP.
                          "LoadBalancer" builds on NodePort and creates an external load-balancer
                          (if supported in the current cloud) which routes to the same endpoints
                          as the clusterIP.
                          "ExternalName" aliases this service to the specified externalName.
                          Several other fields do not apply to ExternalName services.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
                        type: string
                    type: object
                  status:
                    description: |-
                      Most recently observed status of the service.
                      Populated by the system.
                      Read-only.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
                    properties:
                      conditions:
                        description: Current service state
                        items:
                          description: Condition contains details for one aspect of
                            the current state of this API Resource.
                          properties:
                            lastTransitionTime:
                              description: |-
                                lastTransitionTime is the last time the condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: |-
                                message is a human readable message indicating details about the transition.
                                This may be an empty string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: |-
                                observedGeneration represents the .metadata.generation that the condition was set based upon.
                                For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                                with respect to the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: |-
                                reason contains a programmatic identifier indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected values and meanings for this field,
                                and whether the values are considered a guaranteed API.
                                The value should be a CamelCase string.
                                This field may not be empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - type
                        x-kubernetes-list-type: map
                      loadBalancer:
                        description: |-
                          LoadBalancer contains the current status of the load-balancer,
                          if one is present.
                        properties:
                          ingress:
                            description: |-
                              Ingress is a list containing ingress points for the load-balancer.
                              Traffic intended for the service should be sent to these ingress points.
                            items:
                              description: |-
                                LoadBalancerIngress represents the status of a load-balancer ingress point:
                                traffic intended for the service should be sent to an ingress point.
                              properties:
                                hostname:
                                  description: |-
                                    Hostname is set for load-balancer ingress points that are DNS based
                                    (typically AWS load-balancers)
                                  type: string
                                ip:
                                  description: |-
                                    IP is set for load-balancer ingress points that are IP based
                                    (typically GCE or OpenStack load-balancers)
                                  type: string
                                ports:
                                  description: |-
                                    Ports is a list of records of service ports
                                    If used, every port defined in the service should have an entry in it
                                  items:
                                    properties:
                                      error:
                                        description: |-
                                          Error is to record the problem with the service port
                                          The format of the error shall comply with the following rules:
                                          - built-in error values shall be specified in this file and those shall use
                                            CamelCase names
                                          - cloud provider specific error values must have names that comply with the
                                            format foo.example.com/CamelCase.
                                        maxLength: 316
                                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                        type: string
                                      port:
                                        description: Port is the port number of the
                                          service port of which status is recorded
                                          here
                                        format: int32
                                        type: integer
                                      protocol:
                                        description: |-
                                          Protocol is the protocol of the service port of which status is recorded here
                                          The supported values are: "TCP", "UDP", "SCTP"
                                        type: string
                                    required:
                                    - error
                                    - port
                                    - protocol
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            type: array
                        type: object
                    type: object
                type: object
              splunkAIPlatformRef:
                description: ObjectReference contains enough information to let you
                  inspect or modify the referred object.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              splunkAIPlatformUrl:
                type: string
              splunkConfiguration:
                properties:
                  crName:
                    description: Name of the SplunkConfiguration instance
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  crNamespace:
                    description: Namespace of the SplunkConfiguration instance
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  endpoint:
                    type: string
                  secretRef:
                    description: Splunk secret reference
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  token:
                    type: string
                type: object
              taskVolume:
                description: SplunkConfiguration instance reference
                properties:
                  endpoint:
                    description: optional override endpoint (only really needed for
                      S3-compatible like MinIO)
                    type: string
                  path:
                    description: Remote volume URI in the format s3://bucketname/<path
                      prefix>
                    type: string
                  region:
                    description: Region of the remote storage volume where apps reside.
                      Used for aws, if provided. Not used for minio and azure.
                    type: string
                  secretRef:
                    description: Secret object name
                    type: string
                type: object
              tolerations:
                items:
                  description: |-
                    The pod this Toleration is attached to tolerates any taint that matches
                    the triple <key,value,effect> using the matching operator <operator>.
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value.
                        Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod can
                        tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be
                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                        negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to.
                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
              vectorDbUrl:
                type: string
            type: object
          status:
            description: SplunkAIAssistantStatus defines the observed state of SplunkAIAssistant
            properties:
              conditions:
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                format: int64
                type: integer
              platformStatus:
                type: string
              schemaJobId:
                type: string
              vectorDbStatus:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
