apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
      name: splunk-operator
  strategy:
    type: Recreate
  replicas: 1
  template:
    metadata:
      labels:
        control-plane: controller-manager
        name: splunk-operator
      annotations:
        kubectl.kubernetes.io/default-logs-container: manager
        kubectl.kubernetes.io/default-container: manager
    spec:
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
        runAsNonRoot: true
      hostNetwork: false
      hostPID: false
      hostIPC: false
      containers:
      - command:
        - /manager
        args:
        - --leader-elect
        - --pprof
        image: controller:latest
        imagePullPolicy: Always
        name: manager
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
              - "ALL"
            add:
              - "NET_BIND_SERVICE"
          seccompProfile:
            type: "RuntimeDefault"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 1000m
            memory: 2000Mi
          requests:
            cpu: 1000m
            memory: 2000Mi
        volumeMounts:
          - mountPath: /opt/splunk/appframework/
            name: app-staging
      serviceAccountName: controller-manager
      volumes:
      - configMap:
          name: config
        name: splunk-operator-config
      - name:  app-staging
        persistentVolumeClaim:
          claimName: app-download
      terminationGracePeriodSeconds: 10
