{{- if or .Values.customResources.clusterManager.enabled ( and (not $.Values.existingClusterManager) ( or .Values.sva.c3.enabled .Values.sva.m4.enabled ) )}}
apiVersion:  enterprise.splunk.com/v4
kind: ClusterManager
metadata:
  name: {{ .Values.customResources.clusterManager.name }}
  namespace: {{ default (include "splunk-enterprise.namespace" . ) .Values.customResources.clusterManager.namespaceOverride }}
{{- with .Values.customResources.clusterManager.additionalLabels }}
  labels:
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.customResources.clusterManager.additionalAnnotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
spec:
{{- with .Values.customResources.clusterManager.appRepo }}
  appRepo: 
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.customResources.clusterManager.smartstore }}
  smartstore:
{{ toYaml . | indent 4 }}
{{- end }}
{{- if .Values.existingLicenseManager }}
  licenseManagerRef:
    name: {{ .Values.existingLicenseManager.name }}
  {{- if .Values.existingLicenseManager.namespace }}
    namespace: {{ .Values.existingLicenseManager.namespace }}
  {{- end }}
{{- else if .Values.customResources.licenseManager.enabled }}
  licenseManagerRef:
    name: {{ .Values.customResources.licenseManager.name }}
  {{- if .Values.customResources.licenseManager.namespaceOverride }}
    namespace: {{ .Values.customResources.licenseManager.namespaceOverride }}
  {{- end }}
{{- end }}
{{- if .Values.existingMonitoringConsole }}
  monitoringConsoleRef:
    name: {{ .Values.existingMonitoringConsole.name }}
  {{- if .Values.existingMonitoringConsole.namespace }}
    namespace: {{ .Values.existingMonitoringConsole.namespace }}
  {{- end }}
{{- else if .Values.customResources.monitoringConsole.enabled }}
  monitoringConsoleRef:
    name: {{ .Values.customResources.monitoringConsole.name }}
  {{- if .Values.customResources.monitoringConsole.namespaceOverride }}
    namespace: {{ .Values.customResources.monitoringConsole.namespaceOverride }}
  {{- end }}
{{- end }}
{{- if .Values.image.repository }}
  image: {{ .Values.image.repository }}
{{- end }}
{{- if .Values.image.imagePullPolicy }}
  imagePullPolicy: {{ .Values.image.imagePullPolicy }}
{{- end }}
{{- with .Values.image.imagePullSecrets }}
  imagePullSecrets:
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.customResources.clusterManager.volumes }}
  volumes:
{{ toYaml . | indent 4 }}
{{- end }}
{{- if .Values.customResources.clusterManager.licenseUrl }}
  licenseUrl: {{ .Values.customResources.clusterManager.licenseUrl }}
{{- end }}
{{- if .Values.customResources.clusterManager.defaultsUrl }}
  defaultsUrl: {{ .Values.customResources.clusterManager.defaultsUrl }}
{{- end }}
{{- if .Values.sva.m4.enabled }}
  defaults: |-
    splunk:
      site: {{ .Values.sva.m4.clusterManager.site }}
      multisite_master: localhost
      all_sites: {{ .Values.sva.m4.clusterManager.allSites }}
      multisite_replication_factor_origin: 1
      multisite_replication_factor_total: 2
      multisite_search_factor_origin: 1
      multisite_search_factor_total: 2
      idxc:
        search_factor: 2
        replication_factor: 2
{{- else if .Values.customResources.clusterManager.defaults }}
  defaults: |-
{{ toYaml .Values.customResources.clusterManager.defaults | indent 4 }}
{{- end }}
{{- if .Values.customResources.clusterManager.defaultsUrlApps }}
  defaultsUrlApps: {{ .Values.customResources.clusterManager.defaultsUrlApps }}
{{- end }}
{{- with .Values.customResources.clusterManager.extraEnv }}
  extraEnv:
{{ toYaml . | indent 4 }}
{{- end }}
{{- if .Values.customResources.clusterManager.livenessInitialDelaySeconds }}
  livenessInitialDelaySeconds: {{ .Values.customResources.clusterManager.livenessInitialDelaySeconds }}
{{- end }}
{{- if .Values.customResources.clusterManager.readinessInitialDelaySeconds }}
  readinessInitialDelaySeconds: {{ .Values.customResources.clusterManager.readinessInitialDelaySeconds }}
{{- end }}
{{- if .Values.customResources.clusterManager.startupProbe }}
  startupProbe:
{{ toYaml .Values.customResources.clusterManager.startupProbe | indent 4 }}
{{- end }}
{{- if .Values.customResources.clusterManager.livenessProbe }}
  livenessProbe:
{{ toYaml .Values.customResources.clusterManager.livenessProbe | indent 4 }}
{{- end }}
{{- if .Values.customResources.clusterManager.readinessProbe }}
  readinessProbe:
{{ toYaml .Values.customResources.clusterManager.readinessProbe | indent 4 }}
{{- end }}
{{- with .Values.customResources.clusterManager.etcVolumeStorageConfig }}
  etcVolumeStorageConfig:
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.customResources.clusterManager.varVolumeStorageConfig }}
  varVolumeStorageConfig:
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.customResources.clusterManager.resources }}
  resources:
{{ toYaml . | indent 4 }}
{{- end }}
{{- if .Values.customResources.clusterManager.serviceAccount }}
  serviceAccount: {{ .Values.customResources.clusterManager.serviceAccount }}
{{- end }}
{{- with .Values.customResources.clusterManager.serviceTemplate }}
  serviceTemplate:
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.customResources.clusterManager.tolerations }}
  tolerations:
{{ toYaml . | indent 4 }}
{{- end }}
{{- if .Values.customResources.clusterManager.topologySpreadConstraints }}
{{- with .Values.customResources.clusterManager.topologySpreadConstraints }}
  topologySpreadConstraints:
{{ toYaml . | indent 4 }}
{{- end }}
{{- end }}
{{- if and .Values.sva.m4.enabled  .Values.sva.m4.clusterManager.zone }}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: topology.kubernetes.io/zone
            operator: In
            values:
            - {{ .Values.sva.m4.clusterManager.zone }}
{{- else }}
  {{- with .Values.customResources.clusterManager.affinity }}
  affinity:
{{ toYaml . | indent 4 }}
  {{- end }}
{{- end }}
{{- end }}