name: Merge Develop To Main Workflow
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version of Splunk Operator Release'
        required: true
      enterprise_version:
        description: 'Version of Splunk Enterprise Image'
        required: true
      release_candiate_version:
        description: 'Enter number to indicate version of Release Candidate'
        required: true
jobs:
  pull-request:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
      - name: Reset main branch
        run: |
          git fetch origin develop:develop
          git reset --hard develop
      - name: Dotenv Action
        id: dotenv
        uses: falti/dotenv-action@d4d12eaa0e1dd06d5bdc3d7af3bf4c8c93cb5359
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3.10.1
        with:
          branch: "promote-develop-to-main-${{ github.event.inputs.release_version }}"
          base: "main"
          title: "Promote Develop to main for Splunk Operator Release ${{ github.event.inputs.release_version }}"
          reviewers: "${{ steps.dotenv.outputs.REVIEWERS }}"
          body: |
            Automated Pull Request To Merge Develop To Main For Release Version ${{ github.event.inputs.release_version }}

  rc-release:
    runs-on: ubuntu-latest
    needs: pull-request
    if: github.ref == 'refs/heads/develop'
    env:
      SPLUNK_OPERATOR_RC_IMAGE_NAME: splunk/splunk-operator-rc
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: "promote-develop-to-main-${{ github.event.inputs.release_version }}"

      - name: Deep Fetch
        run: |
          git fetch --prune --unshallow

      - name: Dotenv Action
        id: dotenv
        uses: falti/dotenv-action@d4d12eaa0e1dd06d5bdc3d7af3bf4c8c93cb5359
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ steps.dotenv.outputs.GO_VERSION }}

      - name: Install goveralls
        run: |
          go get github.com/mattn/goveralls@latest

      - name: Install Operator SDK
        run: |
          export ARCH=$(case $(uname -m) in x86_64) echo -n amd64 ;; aarch64) echo -n arm64 ;; *) echo -n $(uname -m) ;; esac)
          export OS=$(uname | awk '{print tolower($0)}')
          export OPERATOR_SDK_DL_URL=https://github.com/operator-framework/operator-sdk/releases/download/${{ steps.dotenv.outputs.OPERATOR_SDK_VERSION }}
          sudo curl -LO ${OPERATOR_SDK_DL_URL}/operator-sdk_${OS}_${ARCH}
          sudo chmod +x operator-sdk_${OS}_${ARCH}
          sudo mv operator-sdk_${OS}_${ARCH} /usr/local/bin/operator-sdk

      # Build and push UBI image
      - name: Build and push UBI Image
        run: |
          make docker-buildx IMG=${{ secrets.PUBLIC_ECR_REPOSITORY }}/${{ env.SPLUNK_OPERATOR_RC_IMAGE_NAME }}:${{ github.event.inputs.release_version }}-RC${{ github.event.inputs.release_candiate_version }} BASE_IMAGE=registry.access.redhat.com/ubi8/ubi-minimal BASE_IMAGE_VERSION=latest

      # Build and push Distroless image
      - name: Build and push Distroless Image
        run: |
          make docker-buildx IMG=${{ secrets.PUBLIC_ECR_REPOSITORY }}/${{ env.SPLUNK_OPERATOR_RC_IMAGE_NAME }}:${{ github.event.inputs.release_version }}-RC${{ github.event.inputs.release_candiate_version }} BASE_IMAGE=gcr.io/distroless/static BASE_IMAGE_VERSION=latest

      - name: Tag and Push Default UBI RC Image
        run: |
          docker pull ${{ secrets.PUBLIC_ECR_REPOSITORY }}/${{ env.SPLUNK_OPERATOR_RC_IMAGE_NAME }}:${{ github.event.inputs.release_version }}-RC${{ github.event.inputs.release_candiate_version }}
          docker tag ${{ secrets.PUBLIC_ECR_REPOSITORY }}/${{ env.SPLUNK_OPERATOR_RC_IMAGE_NAME }}:${{ github.event.inputs.release_version }}-RC${{ github.event.inputs.release_candiate_version }} ${{ secrets.PUBLIC_ECR_REPOSITORY }}/${{ env.SPLUNK_OPERATOR_RC_IMAGE_NAME }}:${{ github.event.inputs.release_version }}-RC
          docker push ${{ secrets.PUBLIC_ECR_REPOSITORY }}/${{ env.SPLUNK_OPERATOR_RC_IMAGE_NAME }}:${{ github.event.inputs.release_version }}-RC

      - name: Tag and Push Default Distroless RC Image
        run: |
          docker pull ${{ secrets.PUBLIC_ECR_REPOSITORY }}/${{ env.SPLUNK_OPERATOR_RC_IMAGE_NAME }}:${{ github.event.inputs.release_version }}-RC${{ github.event.inputs.release_candiate_version }}-distroless
          docker tag ${{ secrets.PUBLIC_ECR_REPOSITORY }}/${{ env.SPLUNK_OPERATOR_RC_IMAGE_NAME }}:${{ github.event.inputs.release_version }}-RC${{ github.event.inputs.release_candiate_version }}-distroless ${{ secrets.PUBLIC_ECR_REPOSITORY }}/${{ env.SPLUNK_OPERATOR_RC_IMAGE_NAME }}:${{ github.event.inputs.release_version }}-RC-distroless
          docker push ${{ secrets.PUBLIC_ECR_REPOSITORY }}/${{ env.SPLUNK_OPERATOR_RC_IMAGE_NAME }}:${{ github.event.inputs.release_version }}-RC-distroless

      - name: Generate Release Artifacts
        run: |
          make generate-artifacts IMG=${{ secrets.PUBLIC_ECR_REPOSITORY }}/${{ env.SPLUNK_OPERATOR_RC_IMAGE_NAME }}:${{ github.event.inputs.release_version }}-RC${{ github.event.inputs.release_candiate_version }} VERSION=${{ github.event.inputs.release_version }} SPLUNK_ENTERPRISE_IMAGE=splunk/splunk:${{ github.event.inputs.enterprise_version }}

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v4.4.0
        with:
          name: "release-artifacts-${{ github.event.inputs.release_version }}-RC"
          path: "release-**"
